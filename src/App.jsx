import React, { useState } from "react";

// Simple single-file React + Tailwind mockup of the neuropsychologist platform
// Default export is App component. Use this file to preview basic screens and flows.

export default function App() {
  const [route, setRoute] = useState("dashboard");
  const [clients, setClients] = useState(sampleClients);
  const [selectedClient, setSelectedClient] = useState(null);
  const [selectedExam, setSelectedExam] = useState(null);

  return (
    <div className="min-h-screen bg-gray-50 text-gray-800">
      <div className="max-w-7xl mx-auto p-6">
        <header className="flex items-center justify-between mb-6">
          <div className="flex items-center gap-4">
            <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-indigo-500 to-purple-500 flex items-center justify-center text-white font-bold">NP</div>
            <div>
              <h1 className="text-2xl font-semibold">NeuroPlatform ‚Äî –∫–∞–±–∏–Ω–µ—Ç –Ω–µ–π—Ä–æ–ø—Å–∏—Ö–æ–ª–æ–≥–∞</h1>
              <p className="text-sm text-gray-500">–ü—Ä–æ—Ç–æ—Ç–∏–ø –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ —ç–∫–∑–∞–º–µ–Ω–∞–º–∏</p>
            </div>
          </div>
          <div className="flex items-center gap-4">
            <div className="text-right">
              <div className="text-sm font-medium">–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞</div>
              <div className="text-xs text-gray-500">–¢–∞—Ä–∏—Ñ: –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π ‚Äî –æ–ø–ª–∞—Ç–∞ –¥–æ 2025-09-01</div>
            </div>
            <img src="https://avatars.dicebear.com/api/identicon/kate.svg" alt="avatar" className="w-10 h-10 rounded-full" />
          </div>
        </header>

        <div className="grid grid-cols-12 gap-6">
          <aside className="col-span-3">
            <nav className="bg-white p-4 rounded-2xl shadow-sm sticky top-6">
              <ul className="space-y-2">
                {navItems.map((n) => (
                  <li key={n.key}>
                    <button
                      onClick={() => { setRoute(n.key); setSelectedClient(null); setSelectedExam(null); }}
                      className={`w-full text-left px-3 py-2 rounded-lg ${route === n.key ? 'bg-indigo-50 ring-1 ring-indigo-200' : 'hover:bg-gray-50'}`}>
                      <div className="flex items-center justify-between">
                        <div className="flex items-center gap-3">
                          <span className="w-8 text-center">{n.icon}</span>
                          <span className="font-medium">{n.label}</span>
                        </div>
                        {n.badge && <span className="text-xs text-gray-500">{n.badge}</span>}
                      </div>
                    </button>
                  </li>
                ))}
              </ul>
            </nav>

            <div className="mt-4 text-sm text-gray-500">
              <div className="mb-2 font-semibold">–°–ø—Ä–∞–≤–∫–∞</div>
              <div>–ö–Ω–æ–ø–∫–∞ ¬´–°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É¬ª –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±—ã—Å—Ç—Ä—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —ç–∫–∑–∞–º–µ–Ω–∞ —Ä–µ–±—ë–Ω–∫–æ–º.</div>
            </div>
          </aside>

          <main className="col-span-9">
            <div className="space-y-6">
              {route === 'dashboard' && <Dashboard clients={clients} onOpenClient={(c)=>{ setSelectedClient(c); setRoute('clientCard'); }} setRoute={setRoute} />}
              {route === 'clients' && <ClientsScreen clients={clients} onAdd={(c)=> setClients([c, ...clients])} onOpen={(c)=>{ setSelectedClient(c); setRoute('clientCard'); }} />}
              {route === 'exams' && <ExamsScreen exams={sampleExams} onPreview={(e)=>{ setSelectedExam(e); setRoute('examPreview'); }} onCreateLink={(e)=> alert('–°—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: https://np.example/test/'+e.id)} />}
              {route === 'examPreview' && selectedExam && <ExamPreview exam={selectedExam} onBack={()=> setRoute('exams')} />}
              {route === 'results' && <ResultsScreen />}
              {route === 'clientCard' && selectedClient && <ClientCard client={selectedClient} onBack={()=> setRoute('clients')} />}
              {route === 'profile' && <ProfileScreen />}
            </div>
          </main>
        </div>
      </div>
    </div>
  );
}

// ---------- Sample components ----------

function Dashboard({ clients, onOpenClient, setRoute }){
  return (
    <section>
      <div className="flex items-center justify-between mb-4">
        <h2 className="text-xl font-semibold">–î–∞—à–±–æ—Ä–¥</h2>
        <div className="text-sm text-gray-500">–í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: <span className="font-medium">{clients.length}</span></div>
      </div>

      <div className="grid grid-cols-3 gap-4">
        <div className="bg-white p-4 rounded-2xl shadow-sm">
          <div className="text-sm text-gray-500">–ù–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –∑–∞ –Ω–µ–¥–µ–ª—é</div>
          <div className="mt-3 text-2xl font-bold">12</div>
        </div>
        <div className="bg-white p-4 rounded-2xl shadow-sm">
          <div className="text-sm text-gray-500">–û—Ü–µ–Ω–µ–Ω–æ –ò–ò</div>
          <div className="mt-3 text-2xl font-bold">8</div>
        </div>
        <div className="bg-white p-4 rounded-2xl shadow-sm">
          <div className="text-sm text-gray-500">–¢—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è</div>
          <div className="mt-3 text-2xl font-bold text-amber-600">2</div>
        </div>
      </div>

      <div className="mt-6">
        <div className="flex items-center justify-between mb-3">
          <h3 className="font-semibold">–ö–æ—Ä–æ—Ç–∫–∏–π —Å–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤</h3>
          <button onClick={()=>{setRoute('clients');}} className="text-sm text-indigo-600">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏ ‚Üí</button>
        </div>

        <div className="bg-white rounded-2xl shadow-sm p-4">
          <ul className="space-y-3">
            {clients.slice(0,4).map(c=> (
              <li key={c.id} className="flex items-center justify-between">
                <div className="flex items-center gap-3">
                  <div className="w-10 h-10 rounded-md bg-gray-100 flex items-center justify-center">üëß</div>
                  <div>
                    <div className="font-medium">{c.name}</div>
                    <div className="text-xs text-gray-500">{c.age} –ª–µ—Ç ‚Äî {c.exams.length} —ç–∫–∑–∞–º–µ–Ω–æ–≤</div>
                  </div>
                </div>
                <div className="flex items-center gap-2">
                  <button onClick={()=> onOpenClient(c)} className="text-sm text-indigo-600">–û—Ç–∫—Ä—ã—Ç—å</button>
                </div>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </section>
  );
}

function ClientsScreen({ clients, onAdd, onOpen }){
  const [open, setOpen] = useState(false);
  const [form, setForm] = useState({ name: '', dob: '', parent: '' });

  function submit(){
    if(!form.name) return alert('–í–≤–µ–¥–∏—Ç–µ –∏–º—è');
    const newC = { id: String(Date.now()), name: form.name, dob: form.dob, parent: form.parent, age: 7, exams: [] };
    onAdd(newC); setForm({ name:'', dob:'', parent:'' }); setOpen(false);
  }

  return (
    <section>
      <div className="flex items-center justify-between mb-4">
        <h2 className="text-xl font-semibold">–ö–ª–∏–µ–Ω—Ç—ã</h2>
        <div>
          <button onClick={()=> setOpen(true)} className="px-3 py-2 bg-indigo-600 text-white rounded-lg">–î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞</button>
        </div>
      </div>

      <div className="grid grid-cols-2 gap-4">
        {clients.map(c=> (
          <div key={c.id} className="bg-white p-4 rounded-2xl shadow-sm flex items-center justify-between">
            <div>
              <div className="font-medium">{c.name}</div>
              <div className="text-xs text-gray-500">{c.age} –ª–µ—Ç ¬∑ {c.parent}</div>
            </div>
            <div className="flex gap-2">
              <button onClick={()=> onOpen(c)} className="text-sm text-indigo-600">–û—Ç–∫—Ä—ã—Ç—å</button>
              <button className="text-sm text-gray-500">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
            </div>
          </div>
        ))}
      </div>

      {open && (
        <div className="fixed inset-0 bg-black/40 flex items-center justify-center">
          <div className="bg-white w-full max-w-md p-6 rounded-2xl">
            <h3 className="font-semibold mb-3">–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç</h3>
            <div className="space-y-3">
              <input value={form.name} onChange={e=>setForm({...form,name:e.target.value})} placeholder="–ò–º—è —Ä–µ–±—ë–Ω–∫–∞" className="w-full p-2 border rounded-lg" />
              <input value={form.dob} onChange={e=>setForm({...form,dob:e.target.value})} placeholder="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è" className="w-full p-2 border rounded-lg" />
              <input value={form.parent} onChange={e=>setForm({...form,parent:e.target.value})} placeholder="–ö–æ–Ω—Ç–∞–∫—Ç —Ä–æ–¥–∏—Ç–µ–ª—è" className="w-full p-2 border rounded-lg" />
              <div className="flex justify-end gap-2">
                <button onClick={()=> setOpen(false)} className="px-3 py-2 rounded-lg">–û—Ç–º–µ–Ω–∞</button>
                <button onClick={submit} className="px-3 py-2 bg-indigo-600 text-white rounded-lg">–°–æ–∑–¥–∞—Ç—å</button>
              </div>
            </div>
          </div>
        </div>
      )}
    </section>
  );
}

function ExamsScreen({ exams, onPreview, onCreateLink }){
  return (
    <section>
      <div className="flex items-center justify-between mb-4">
        <h2 className="text-xl font-semibold">–≠–∫–∑–∞–º–µ–Ω—ã</h2>
        <div className="text-sm text-gray-500">–í—ã–±–µ—Ä–∏—Ç–µ —ç–∫–∑–∞–º–µ–Ω –∏ —Å–æ–∑–¥–∞–π—Ç–µ –±—ã—Å—Ç—Ä—É—é —Å—Å—ã–ª–∫—É</div>
      </div>

      <div className="grid grid-cols-3 gap-4">
        {exams.map(e=> (
          <div key={e.id} className="bg-white p-4 rounded-2xl shadow-sm">
            <div className="font-semibold">{e.title}</div>
            <div className="text-xs text-gray-500 mt-1">{e.ageRange}</div>
            <p className="text-sm mt-2 text-gray-600">{e.description}</p>
            <div className="flex items-center justify-between mt-4">
              <div className="flex gap-2">
                <button onClick={()=> onPreview(e)} className="px-3 py-1 text-sm rounded-lg border">–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å</button>
                <button onClick={()=> onCreateLink(e)} className="px-3 py-1 text-sm rounded-lg bg-indigo-600 text-white">–°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É</button>
              </div>
              <div className="text-xs text-gray-500">{e.duration} –º–∏–Ω</div>
            </div>
          </div>
        ))}
      </div>
    </section>
  );
}

function ExamPreview({ exam, onBack }){
  return (
    <section>
      <div className="flex items-center justify-between mb-4">
        <div>
          <h2 className="text-xl font-semibold">–ü—Ä–æ—Å–º–æ—Ç—Ä —ç–∫–∑–∞–º–µ–Ω–∞</h2>
          <div className="text-sm text-gray-500">–†–µ–∂–∏–º –ø—Å–∏—Ö–æ–ª–æ–≥–∞ ‚Äî –º–æ–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –∫–∞–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è</div>
        </div>
        <div>
          <button onClick={onBack} className="px-3 py-2 rounded-lg">‚Üê –ù–∞–∑–∞–¥</button>
        </div>
      </div>

      <div className="bg-white p-6 rounded-2xl shadow-sm">
        <h3 className="font-semibold mb-2">{exam.title}</h3>
        <div className="text-sm text-gray-500 mb-4">{exam.description}</div>

        <div className="space-y-4">
          <div className="p-4 border rounded-lg">
            <div className="font-medium">–ü—Ä–∏–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è:</div>
            <div className="text-sm text-gray-600 mt-2">{exam.sampleTask}</div>
          </div>

          <div className="p-4 border rounded-lg">
            <div className="font-medium">–û—Ü–µ–Ω–∫–∞ –ò–ò:</div>
            <div className="text-sm text-gray-600 mt-2">–ü—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –∞–Ω–∞–ª–∏–∑–µ —Å–∏—Å—Ç–µ–º–∞ —É—á–∏—Ç—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –±–∞–∑—É –∏ –≤—ã–¥–∞—ë—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é.</div>
          </div>

          <div className="flex gap-2">
            <button className="px-4 py-2 rounded-lg bg-indigo-600 text-white">–ü—Ä–æ–π—Ç–∏ –∫–∞–∫ —Ä–µ–±—ë–Ω–æ–∫ ‚Üí</button>
            <button onClick={onBack} className="px-4 py-2 rounded-lg border">–ó–∞–∫—Ä—ã—Ç—å</button>
          </div>
        </div>
      </div>
    </section>
  );
}

function ResultsScreen(){
  return (
    <section>
      <div className="flex items-center justify-between mb-4">
        <h2 className="text-xl font-semibold">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã</h2>
        <div className="text-sm text-gray-500">–û—Ç—á—ë—Ç—ã, –¥–∏–∞–≥—Ä–∞–º–º—ã –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –ò–ò</div>
      </div>

      <div className="bg-white rounded-2xl p-4 shadow-sm">
        <div className="grid grid-cols-3 gap-4">
          <div className="p-4 border rounded-lg">
            <div className="text-xs text-gray-500">–ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å</div>
            <div className="mt-3 font-bold text-2xl">–ù–æ—Ä–º–∞</div>
          </div>
          <div className="p-4 border rounded-lg">
            <div className="text-xs text-gray-500">–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å</div>
            <div className="mt-3 font-bold text-2xl">–ü–æ–∑–∏—Ç–∏–≤–Ω–æ</div>
          </div>
          <div className="p-4 border rounded-lg">
            <div className="text-xs text-gray-500">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ò–ò</div>
            <div className="mt-3 text-sm">–ò–≥—Ä–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è 2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –ª–æ–≥–æ–ø–µ–¥–æ–º –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.</div>
          </div>
        </div>

        <div className="mt-6">
          <h3 className="font-semibold mb-2">–ò—Å—Ç–æ—Ä–∏—è –∏ –¥–∏–Ω–∞–º–∏–∫–∞</h3>
          <div className="h-40 rounded-lg border flex items-center justify-center text-gray-400">[–ó–¥–µ—Å—å –±—É–¥–µ—Ç –≥—Ä–∞—Ñ–∏–∫ ‚Äî –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Recharts]</div>
        </div>

        <div className="mt-4 flex justify-end">
          <button className="px-4 py-2 rounded-lg border mr-2">–°–∫–∞—á–∞—Ç—å PDF</button>
          <button className="px-4 py-2 rounded-lg bg-indigo-600 text-white">–ü–æ–¥–µ–ª–∏—Ç—å—Å—è</button>
        </div>
      </div>
    </section>
  );
}

function ClientCard({ client, onBack }){
  return (
    <section>
      <div className="flex items-center justify-between mb-4">
        <div>
          <h2 className="text-xl font-semibold">–ö–∞—Ä—Ç–∞ —Ä–µ–±—ë–Ω–∫–∞ ‚Äî {client.name}</h2>
          <div className="text-sm text-gray-500">–í–æ–∑—Ä–∞—Å—Ç: {client.age} ¬∑ –†–æ–¥–∏—Ç–µ–ª—å: {client.parent || '‚Äî'}</div>
        </div>
        <div>
          <button onClick={onBack} className="px-3 py-2 rounded-lg">‚Üê –ù–∞–∑–∞–¥</button>
        </div>
      </div>

      <div className="grid grid-cols-3 gap-4">
        <div className="bg-white p-4 rounded-2xl shadow-sm">
          <div className="text-sm text-gray-500">–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–∫–∑–∞–º–µ–Ω</div>
          <div className="mt-2 font-medium">–ü—Ä–∏–º–µ—Ä: –†–∞–∑–≤–∏—Ç–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è</div>
          <div className="text-xs text-gray-500 mt-1">–î–∞—Ç–∞: 2025-07-12</div>
        </div>

        <div className="bg-white p-4 rounded-2xl shadow-sm">
          <div className="text-sm text-gray-500">–°—Ç–∞—Ç—É—Å</div>
          <div className="mt-2 font-medium text-amber-600">–¢—Ä–µ–±—É–µ—Ç –Ω–∞–±–ª—é–¥–µ–Ω–∏—è</div>
        </div>

        <div className="bg-white p-4 rounded-2xl shadow-sm">
          <div className="text-sm text-gray-500">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</div>
          <div className="mt-2 text-sm">–ò–≥—Ä–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è, –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ 1 —Ä–∞–∑ –≤ 2 –º–µ—Å—è—Ü–∞</div>
        </div>
      </div>

      <div className="mt-6 bg-white p-4 rounded-2xl shadow-sm">
        <h3 className="font-semibold mb-2">–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–π</h3>
        <ul className="space-y-3">
          {sampleHistory.map(h=> (
            <li key={h.id} className="flex items-center justify-between">
              <div>
                <div className="font-medium">{h.exam}</div>
                <div className="text-xs text-gray-500">{h.date}</div>
              </div>
              <div className="text-sm">{h.result}</div>
            </li>
          ))}
        </ul>
      </div>
    </section>
  );
}

function ProfileScreen(){
  return (
    <section>
      <h2 className="text-xl font-semibold mb-3">–ü—Ä–æ—Ñ–∏–ª—å</h2>
      <div className="grid grid-cols-2 gap-4">
        <div className="bg-white p-4 rounded-2xl shadow-sm">
          <div className="font-medium">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>
          <div className="text-sm text-gray-500 mt-2">–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞ ¬∑ –ù–µ–π—Ä–æ–ø—Å–∏—Ö–æ–ª–æ–≥</div>
          <div className="mt-4 text-sm">
            <div>–¢–∞—Ä–∏—Ñ: –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π</div>
            <div>–°–ª–µ–¥—É—é—â–∞—è –æ–ø–ª–∞—Ç–∞: 2025-09-01</div>
          </div>
        </div>

        <div className="bg-white p-4 rounded-2xl shadow-sm">
          <div className="font-medium">–û–ø–ª–∞—Ç–∞ –∏ –ø–æ–¥–ø–∏—Å–∫–∞</div>
          <div className="text-sm text-gray-500 mt-2">–ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏—è, –∏—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—á–µ—Ç–∞.</div>
          <div className="mt-4">
            <button className="px-4 py-2 bg-indigo-600 text-white rounded-lg">–ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É</button>
          </div>
        </div>
      </div>
    </section>
  );
}

// ---------- Sample data ----------

const navItems = [
  { key: 'dashboard', label: '–î–∞—à–±–æ—Ä–¥', icon: 'üè†' },
  { key: 'clients', label: '–ö–ª–∏–µ–Ω—Ç—ã', icon: 'üëß', badge: '12' },
  { key: 'exams', label: '–≠–∫–∑–∞–º–µ–Ω—ã', icon: 'üìù' },
  { key: 'results', label: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã', icon: 'üìä' },
  { key: 'profile', label: '–ü—Ä–æ—Ñ–∏–ª—å', icon: '‚öôÔ∏è' },
];

const sampleClients = [
  { id: 'c1', name: '–ê–ª–∏–Ω–∞', age: 7, parent: '–ú–∞–º–∞: –û–ª—å–≥–∞, +7 912 000-00-01', exams: ['e1'] },
  { id: 'c2', name: '–ò—Ä–∞', age: 6, parent: '–ú–∞–º–∞: –ú–∞—Ä–∏—è, +7 912 000-00-02', exams: [] },
  { id: 'c3', name: '–ù–∞—Å—Ç—è', age: 8, parent: '–ü–∞–ø–∞: –°–µ—Ä–≥–µ–π, +7 912 000-00-03', exams: ['e2','e3'] },
  { id: 'c4', name: '–û–ª—è', age: 7, parent: '–ú–∞–º–∞: –ï–ª–µ–Ω–∞, +7 912 000-00-04', exams: [] },
];

const sampleExams = [
  { id: 'e1', title: '–†–∞–∑–≤–∏—Ç–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è (7 –ª–µ—Ç)', ageRange: '6‚Äì8 –ª–µ—Ç', duration: 18, description: '–ù–∞–±–æ—Ä –∑–∞–¥–∞—á –Ω–∞ –≤–Ω–∏–º–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ.', sampleTask: '–ù–∞–π–¥–∏ –æ—Ç–ª–∏—á–∏—è –º–µ–∂–¥—É –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏.' },
  { id: 'e2', title: '–ü–∞–º—è—Ç—å –∏ —Ä–µ—á—å (6‚Äì8 –ª–µ—Ç)', ageRange: '6‚Äì8 –ª–µ—Ç', duration: 15, description: '–ó–∞–¥–∞–Ω–∏—è –Ω–∞ –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –∏ –≤–µ—Ä–±–∞–ª—å–Ω—É—é –ø–∞–º—è—Ç—å.', sampleTask: '–ó–∞–ø–æ–º–Ω–∏ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –∏ –ø–æ–≤—Ç–æ—Ä–∏.' },
  { id: 'e3', title: '–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è', ageRange: '7‚Äì9 –ª–µ—Ç', duration: 12, description: '–ó–∞–¥–∞—á–∏ –Ω–∞ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.', sampleTask: '–°–æ–±–µ—Ä–∏ –ø–∞–∑–ª –∑–∞ –≤—Ä–µ–º—è.' },
];

const sampleHistory = [
  { id: 'h1', exam: '–†–∞–∑–≤–∏—Ç–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è', date: '2025-07-12', result: '–ù–æ—Ä–º–∞' },
  { id: 'h2', exam: '–ü–∞–º—è—Ç—å –∏ —Ä–µ—á—å', date: '2025-03-05', result: '–ù–µ–±–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç' },
];
